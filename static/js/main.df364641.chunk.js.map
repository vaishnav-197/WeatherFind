{"version":3,"sources":["components/forecast.js","App.js","index.js"],"names":["forecast","api","App","useState","query","setQuery","weather","setWeather","dateConverter","epooch","myDate","Date","toLocaleString","className","main","temp","src","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","size","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Math","round","feels_like","description","icon","alt","id","temp_max","temp_min","wind","speed","sunrise","sunset","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPASeA,ICLTC,EACC,mCADDA,EAEE,2CAmMOC,MA/Lf,WAAgB,IAAD,EACcC,mBAAS,IADvB,mBACNC,EADM,KACEC,EADF,OAEkBF,mBAAS,IAF3B,mBAENG,EAFM,KAEIC,EAFJ,KA2CPC,EAAgB,SAACC,GACrBA,GAAgB,IAChB,IAAIC,EAAS,IAAIC,KAAKF,GAGtB,OAFAC,EAASA,EAAOE,kBAMlB,OACE,yBAAKC,UAAmC,oBAAhBP,EAAQQ,MAAyBR,EAAQQ,KAAKC,KAAM,GAAM,WAAsB,OAEtG,8BAGE,yBAAKF,UAAU,OACb,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,SACd,4BAAI,yBAAKG,IAAI,+CAAb,iBAEF,yBAAKH,UAAU,cACb,2BACAI,KAAK,OACLJ,UAAW,cACXK,YAAc,yBACdC,SAAW,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOC,QAClCA,MAAQlB,EACRmB,WA9DQ,SAAAC,GACA,UAAXA,EAAIC,KACNC,MAAK,WAAMzB,EAAN,qBAA2BG,EAA3B,+BAAuDH,IAC1D0B,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJvB,EAAWuB,GACXzB,EAAS,IACT0B,QAAQC,IAAIF,OAwDXG,KAAK,SAKN,yBAAKpB,UAAU,qBAUf,yBAAKA,UAAU,OAGhB,yBAAKA,UAAU,oBAEU,oBAAhBP,EAAQQ,KACf,6BACG,yBAAKD,UAAU,gBACX,yBAAKA,UAAU,YAAYP,EAAQ4B,KAAnC,MAA4C5B,EAAQ6B,IAAIC,SACxD,yBAAKvB,UAAU,QAtEX,SAACwB,GACnB,IAIIC,EAHO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAG/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EANS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAMzGL,EAAEM,YACjBC,EAAMP,EAAEQ,cAEZ,MAAM,IAAN,OAAWP,EAAX,YAAkBE,EAAlB,YAA0BE,EAA1B,YAAmCE,GA4DEE,CAAY,IAAInC,QAE3C,yBAAKE,UAAU,eACX,yBAAKA,UAAU,QACZkC,KAAKC,MAAM1C,EAAQQ,KAAKC,MAD3B,SACoC,6BAClC,2CACcT,EAAQQ,KAAKmC,WAD3B,UAKF,yBAAKpC,UAAU,gBACb,yBAAKA,UAAU,QAGZP,EAAQA,QAAQ,GAAG4C,YAHtB,KAIE,yBAAKlC,IAAG,2CAAsCV,EAAQA,QAAQ,GAAG6C,KAAzD,WAAwEC,IAAI,SAS9F,MAWH,yBAAKvC,UAAU,2BAGe,oBAAhBP,EAAQQ,KACf,yBAAKD,UAAU,cAAcwC,GAAG,MAC9B,oCAAU/C,EAAQQ,KAAKwC,SAAvB,SAAmC,8BACnC,oCAAUhD,EAAQQ,KAAKyC,SAAvB,SAAmC,8BACnC,qCAAWjD,EAAQkD,KAAKC,MAAxB,SAAqC,8BACrC,yCAAgBjD,EAAeF,EAAQ6B,IAAIuB,SAA3C,KAAsD,8BACtD,yCAAgBlD,EAAeF,EAAQ6B,IAAIwB,QAA3C,MAIJ,MASL,yBAAK9C,UAAU,mBAEZ,sCA2BN,gCACK,sDAAiB,uBAAG+C,KAAK,mDAAR,IAA2D,uBAAG/C,UAAU,kBAAzF,IAAiH,uBAAG+C,KAAK,wCAAR,kBAAjH,QC3LXC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.df364641.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\nimport './forecast.css';\r\n\r\n\r\nfunction forecast(){\r\n\r\n}\r\n\r\n\r\nexport default forecast;\r\n\r\n\r\n","import React , {useState} from 'react';\nimport forecast from './components/forecast';\n\n\nconst api = {\n  key: \"6ae4e210f7cb5fce015f786ecfc5d5cc\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n\n}\n\nfunction App() {\n  const [query , setQuery] = useState('');\n  const [weather , setWeather] = useState({});\n\n  \n\n\n  //  api call\n\n    const search = evt => {\n    if (evt.key ===\"Enter\") {\n      fetch (` ${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n       .then( res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n\n  \n  \n  \n  // to get date\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year= d.getFullYear();\n\n    return ` ${day} ${date} ${month} ${year}`\n  }\n\n\n\n  // epooch to date converter\n\n  const dateConverter = (epooch) => {\n    epooch = epooch*1000;\n    let myDate = new Date(epooch);\n    myDate = myDate.toLocaleString()\n    // myDate = myDate.getTime();\n    return myDate;\n    \n  }\n\n  return (\n    <div className={(typeof weather.main != \"undefined\") ? ((weather.main.temp >16) ? 'App warm' : 'App') : 'App'}>\n \n      <main>\n\n        {/* Search Box */}\n        <div className=\"row\">\n          <div className=\"col-12 col-sm-3\"></div>\n          <div className=\"col-12 col-sm-6\">\n          <div className=\"brand\">\n           <h1><img src=\"https://img.icons8.com/nolan/64/autumn.png\"/>WeatherFind </h1>\n         </div>\n         <div className=\"search-box\">\n           <input \n           type=\"text\"\n           className= \"search-bar \"\n           placeholder = \"search.... (city name)\"\n           onChange= {e => setQuery(e.target.value)}\n           value ={query}\n           onKeyPress= {search}\n           size=\"50\"\n           />\n           \n         </div>\n          </div>\n          <div className=\"col-12 col-sm-3\"></div>\n        </div>\n         {/* End of Search Box */}\n\n\n\n\n\n         \n\n          <div className=\"row\">\n\n\n         <div className=\"col-12 col-lg-4 \">\n           {/* weather box */}\n         {(typeof weather.main != \"undefined\") ?(\n           <div>\n              <div className=\"location-box\">\n                  <div className=\"location\">{weather.name} , {weather.sys.country}</div>\n                  <div className=\"date\">{dateBuilder(new Date())}</div>\n              </div>\n              <div className=\"weather-box\">\n                  <div className=\"temp\">\n                    {Math.round(weather.main.temp)}°c <br/>\n                    <p>\n                    Feels like : {weather.main.feels_like}°c \n                    </p>\n                  </div>\n                  \n                  <div className=\"location-box\">\n                    <div className=\"desc\"> \n                       \n                       \n                      {weather.weather[0].description} :\n                      <img src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt=\"\" />\n                    </div>\n                 </div>\n                                 \n                  \n              </div>\n\n           </div>\n         ) : (\n            null\n         )}\n\n           {/* End of weather box */}\n\n           {/* description component */}\n         </div>\n\n\n\n\n         <div className=\"col-12 col-lg-4 details\">\n            {/* max and min component */}\n            \n              {(typeof weather.main != \"undefined\") ?(\n                <div className=\"temperature\" id=\"de\">\n                  <p>Max : {weather.main.temp_max}°c <br/></p>\n                  <p>Min : {weather.main.temp_min}°c <br/></p>\n                  <p>Wind : {weather.wind.speed } kmph <br/></p>\n                  <p> Sunrise : { dateConverter( weather.sys.sunrise)}  <br/></p>\n                  <p>  Sunset : { dateConverter( weather.sys.sunset)} </p>                \n                  \n                </div>\n              ):(\n              null\n              )\n              }\n            \n         </div>\n\n\n\n\n         <div className=\"col-12 col-lg-4\">\n            \n            <forecast/>   \n            \n         </div>\n\n         </div>\n         \n \n\n         \n\n\n           \n\n          \n\n          \n\n\n\n\n\n\n\n\n          \n            \n      </main>\n      <footer>\n           <p>❤️ vaishnav | <a href=\"https://github.com/vaishnav-197/WeatherFind.git\"> <i className=\"fa fa-github\"></i></a> <a href=\"https://icons8.com/icon/80651/summer\">icon by Icons8</a> </p>\n                    \n      </footer>\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}